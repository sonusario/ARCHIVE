((m n f x) exp ((n m) f x)) $ //postfix

(2 3) f x
(x -> 3 (3 x)) f x
3 (3 f) x
(3 f) ((3 f) ((3 f) x))
(y -> f(f(f y))) ((3 f) ((3 f) x))
f(f(f ((3 f) ((3 f) x))) )
f(f(f ((y -> f(f(f y))) ((3 f) x))) )
f(f(f(f(f(f ((3 f) x) )))))
f(f(f(f(f(f ((y -> f(f(f y))) x) )))))
f(f(f(f(f(f(f(f(f x))))))))

(3 2) f x
(x -> 2 (2 (2 x))) f x
2 (2 (2 f)) x
(2 (2 f)) ((2 (2 f)) x)
(2 (y -> f(f y)) ) ((2 (2 f)) x)
(z -> (y -> f(f y)) ((y -> f(f y)) z) ) ((2 (2 f)) x)
(y -> f(f y)) ((y -> f(f y)) ((2 (2 f)) x))
f(f(f(f ((2 (2 f)) x) )))
f(f(f(f ((y -> (2 f) ((2 f) y)) x) )))
f(f(f(f ((2 f) ((2 f) x)) )))
f(f(f(f ((y -> f(f y)) ((2 f) x)) )))
f(f(f(f (f(f ((2 f) x))) )))
f(f(f(f (f(f ((y -> f(f y)) x))) )))
f(f(f(f(f(f(f(f x)))))))


(2 3) f x => f is not applied to x because x is not defined.
		Then 2 is applied to 3, the result is applied to f, and the result of that is applied to x.

2 3 f x => f is not applied to x because x is not defined.
		Then 3 is applied to f, the result is applied to x, and 2 is applied to the result of that.
