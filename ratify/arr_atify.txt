assume nth

[(y m d [y \#y \#m 3 < @ - @] [t m 1 - @ (0 3 2 5 0 3 5 1 4 6 2 4) nth @])
 dow
 (y y 4 / @ + @ y 100 / @ - @ y 400 / @ + @ t + @ d + @)
]

int dow(int y, int m, int d) {
    /* 1 <= m <= 12,  y > 1752 (in the U.K.) */ 
    static int t[] = {0, 3, 2, 5, 0, 3, 5, 1, 4, 6, 2, 4}; 
    y -= m < 3;  
    return (y + y/4 - y/100 + y/400 + t[m-1] + d) % 7; 
}

[(y m d [y \#y \#m 3 < @ - @] [t m 1 - @ (0 3 2 5 0 3 5 1 4 6 2 4) nth @]) dow (y y 4 / @ + @ y 100 / @ - @ y 400 / @ + @ t + @ d + @)]

int dow(int y,int m,int d){static int t[] = {0,3,2,5,0,3,5,1,4,6,2,4};y-=m<3;return (y+y/4-y/100+y/400+t[m-1]+d)%7;}

((y m d (y \#y \#m 3 < @ - @) tag @ (t m 1 - @ (0 3 2 5 0 3 5 1 4 6 2 4) nth @) tag @) dow (y y 4 / @ + @ y 100 / @ - @ y 400 / @ + @ t + @ d + @)) def @



