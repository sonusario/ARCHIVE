>>> // \: is the beginning of the stack or ( ) list
>>> // ~ denotes an anon function
>>> // consider regex for # inputs

>>> [ ( # # ) T ( #0 ) ]
>>> [ ( # # ) F ( #1 ) ]
>>> [ ( #A #A ) eq ( T )( F ) ]
>>> [ ( # ) iz ( # 0 eq @ ) ]
>>> [ ( # ) fac ( 1 ( # # 1 - @ fac @ * @ ) # iz @ @ ) ]

>>> [ ( # ) NOT ( F T # @ ) ]
>>> [ ( # # ) AND ( #1 F #0 @ ) ]
>>> [ ( # # ) OR ( T #2 #0 @ ) ]
>>> [ ( # # ) NAND ( #0 #1 AND @ NOT @ ) ]
>>> [ ( # # ) NAND ( (F T #1 @ ) T #0 @ ) ]

>>> x [ ( # ) ~ ( x 1 + @ ) ] @

>>> [ ( # ) encase ( ( # ) ) ]
>>> [ ( ( # ) ) strip ( # ) ]

>>> [ ( 0 ) ( # ) fac ( 1 ) ( # # 1 - @ fac @ * @ ) ]
>>> [ [ ( 0 ) fac ( 1 ) ]
      [ ( # ) fac ( # # 1 - @ fac @ * @ ) ] ]

>>> [ x 4 ]
>>> x
4

>>> [ y 3 ]
>>> y
3

>>> x y + @
7

>>> [ x 3 ]
>>> [ y 4 ]
>>> x + y = x y + @
3 + 4 = 7

>>> [ ( # ) z 5 ]
>>> 2 z @
5

>>> [(#) sqrt ()]